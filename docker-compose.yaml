services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME:-myapp}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Optional: for initial schema
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Your API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node_api
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      NODE_ENV: dev
      DB_HOST: postgres
      DB_PORT: 5432
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-myapp}
      PORT: 8000
    depends_on:
      postgres:
        condition: service_healthy
    # volumes:
    # - ./api/logs:/app/logs # Optional: for log persistence
    restart: unless-stopped

volumes:
  postgres_data:
